import { struct, u8 } from "@solana/buffer-layout";
import { TOKEN_PROGRAM_ID } from "@solana/spl-token";
import { TransactionInstruction } from "@solana/web3.js";
import { TokenSwapInstruction } from "./instruction";
const DataLayout = struct([u8("instruction")]);
export const addUserPositionInstruction = (programId, authority, positionsKey) => {
    const data = Buffer.alloc(DataLayout.span);
    DataLayout.encode({
        instruction: TokenSwapInstruction.AddUserPosition,
    }, data);
    const keys = [
        { pubkey: programId, isSigner: false, isWritable: false },
        { pubkey: authority, isSigner: false, isWritable: false },
        { pubkey: positionsKey, isSigner: false, isWritable: true },
        { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },
    ];
    return new TransactionInstruction({
        keys,
        programId,
        data,
    });
};
//# sourceMappingURL=addUserPosition.js.map