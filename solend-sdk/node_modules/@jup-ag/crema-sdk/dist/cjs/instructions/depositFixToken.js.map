{"version":3,"file":"depositFixToken.js","sourceRoot":"","sources":["../../../src/instructions/depositFixToken.ts"],"names":[],"mappings":"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","sourcesContent":["import { s32, struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\nimport type Decimal from \"decimal.js\";\n\nimport { decimalU64 } from \"../util/layout\";\nimport { TokenSwapInstruction } from \"./instruction\";\n\nexport interface Data {\n  instruction: number;\n  isNewPosition: number;\n  fixTokenType: number;\n  tickLower: number;\n  tickUpper: number;\n  maximumTokenA: Decimal;\n  maximumTokenB: Decimal;\n  positionIndex: Decimal;\n}\n\nconst DataLayout = struct<Data>([\n  u8(\"instruction\"),\n  u8(\"isNewPosition\"),\n  u8(\"fixTokenType\"),\n  s32(\"tickLower\"),\n  s32(\"tickUpper\"),\n  decimalU64(\"maximumTokenA\"),\n  decimalU64(\"maximumTokenB\"),\n  decimalU64(\"positionIndex\"),\n]);\n\nexport const Decode = (data: Buffer): Data => {\n  return DataLayout.decode(data);\n};\n\nexport const depositFixTokenInstruction = (\n  programId: PublicKey,\n  tokenSwapKey: PublicKey,\n  authority: PublicKey,\n  userTransferAuthority: PublicKey,\n  userTokenA: PublicKey,\n  userTokenB: PublicKey,\n  swapTokenA: PublicKey,\n  swapTokenB: PublicKey,\n  nftMint: PublicKey,\n  nftUser: PublicKey,\n  ticksKey: PublicKey,\n  positionsKey: PublicKey,\n  isNewPosition: number,\n  fixTokenType: number,\n  tickLower: number,\n  tickUpper: number,\n  maximumTokenA: Decimal,\n  maximumTokenB: Decimal,\n  positionIndex: Decimal\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.DepositFixToken,\n      isNewPosition,\n      fixTokenType,\n      tickLower,\n      tickUpper,\n      maximumTokenA,\n      maximumTokenB,\n      positionIndex,\n    },\n    data\n  );\n  console.log({\n    instruction: TokenSwapInstruction.DepositFixToken,\n    isNewPosition,\n    fixTokenType,\n    tickLower,\n    tickUpper,\n    maximumTokenA: maximumTokenA.toString(),\n    maximumTokenB: maximumTokenB.toString(),\n    positionIndex: positionIndex.toString(),\n  });\n  const keys = [\n    { pubkey: tokenSwapKey, isSigner: false, isWritable: true },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: userTransferAuthority, isSigner: true, isWritable: false },\n    { pubkey: userTokenA, isSigner: false, isWritable: true },\n    { pubkey: userTokenB, isSigner: false, isWritable: true },\n    { pubkey: swapTokenA, isSigner: false, isWritable: true },\n    { pubkey: swapTokenB, isSigner: false, isWritable: true },\n    { pubkey: nftMint, isSigner: false, isWritable: true },\n    { pubkey: nftUser, isSigner: false, isWritable: true },\n    { pubkey: ticksKey, isSigner: false, isWritable: true },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n"]}