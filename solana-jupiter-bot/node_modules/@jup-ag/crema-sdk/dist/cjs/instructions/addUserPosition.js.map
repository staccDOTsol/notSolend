{"version":3,"file":"addUserPosition.js","sourceRoot":"","sources":["../../../src/instructions/addUserPosition.ts"],"names":[],"mappings":";;;AAAA,yDAAmD;AACnD,iDAAqD;AAErD,6CAAyD;AAEzD,+CAAqD;AAMrD,MAAM,UAAU,GAAG,IAAA,sBAAM,EAAO,CAAC,IAAA,kBAAE,EAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAE9C,MAAM,0BAA0B,GAAG,CACxC,SAAoB,EACpB,SAAoB,EACpB,YAAuB,EACC,EAAE;IAC1B,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC3C,UAAU,CAAC,MAAM,CACf;QACE,WAAW,EAAE,kCAAoB,CAAC,eAAe;KAClD,EACD,IAAI,CACL,CAAC;IACF,MAAM,IAAI,GAAG;QACX,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QACzD,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;QACzD,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE;QAC3D,EAAE,MAAM,EAAE,4BAAgB,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;KACjE,CAAC;IAEF,OAAO,IAAI,gCAAsB,CAAC;QAChC,IAAI;QACJ,SAAS;QACT,IAAI;KACL,CAAC,CAAC;AACL,CAAC,CAAC;AAxBW,QAAA,0BAA0B,8BAwBrC","sourcesContent":["import { struct, u8 } from \"@solana/buffer-layout\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport { TransactionInstruction } from \"@solana/web3.js\";\n\nimport { TokenSwapInstruction } from \"./instruction\";\n\ninterface Data {\n  instruction: number;\n}\n\nconst DataLayout = struct<Data>([u8(\"instruction\")]);\n\nexport const addUserPositionInstruction = (\n  programId: PublicKey,\n  authority: PublicKey,\n  positionsKey: PublicKey\n): TransactionInstruction => {\n  const data = Buffer.alloc(DataLayout.span);\n  DataLayout.encode(\n    {\n      instruction: TokenSwapInstruction.AddUserPosition,\n    },\n    data\n  );\n  const keys = [\n    { pubkey: programId, isSigner: false, isWritable: false },\n    { pubkey: authority, isSigner: false, isWritable: false },\n    { pubkey: positionsKey, isSigner: false, isWritable: true },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n  ];\n\n  return new TransactionInstruction({\n    keys,\n    programId,\n    data,\n  });\n};\n"]}