{"version":3,"file":"transaction.js","sourceRoot":"","sources":["../../../src/util/transaction.ts"],"names":[],"mappings":";;;AAMA,6CAA6F;AAE7F;;;;;;GAMG;AACI,KAAK,UAAU,yBAAyB,CAC7C,IAAgB,EAChB,WAAwB,EACxB,GAAG,OAAiB;IAEpB,OAAO,IAAA,mCAA6B,EAAC,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE;QAC/D,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,QAAQ;QACpB,mBAAmB,EAAE,QAAQ;KAC9B,CAAC,CAAC;AACL,CAAC;AAVD,8DAUC","sourcesContent":["import type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from \"@solana/web3.js\";\nimport { sendAndConfirmTransaction as realSendAndConfirmTransaction } from \"@solana/web3.js\";\n\n/**\n * Send and confirm trnasaction with default option\n * @param conn The connection to use\n * @param transaction The transaction\n * @param signers The signers array\n * @returns\n */\nexport async function sendAndConfirmTransaction(\n  conn: Connection,\n  transaction: Transaction,\n  ...signers: Signer[]\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(conn, transaction, signers, {\n    skipPreflight: false,\n    commitment: \"recent\",\n    preflightCommitment: \"recent\",\n  });\n}\n"]}