const {
  Box,
  Text
} = require("ink");
const {
  useContext
} = require("react");
const React = require("react");
const WizardContext = require("../WizardContext");
const Menu = () => {
  const {
    nav,
    config
  } = useContext(WizardContext);
  return /*#__PURE__*/React.createElement(Box, {
    width: "10%",
    minWidth: 12,
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "flex-end"
  }, nav.steps.map((step, index) => {
    const isActive = index === nav.currentStep;
    const isSet = config[nav.steps[index]]?.isSet;
    const isSectionSet = isSet instanceof Object ? Object.values(isSet).every(value => value === true) : isSet;
    return /*#__PURE__*/React.createElement(Text, {
      color: isSectionSet ? "green" : "",
      dimColor: !isActive,
      bold: isActive,
      underline: isActive,
      backgroundColor: isActive && "#481fde",
      key: index
    }, step);
  }));
};
module.exports = Menu;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb3giLCJUZXh0IiwicmVxdWlyZSIsInVzZUNvbnRleHQiLCJSZWFjdCIsIldpemFyZENvbnRleHQiLCJNZW51IiwibmF2IiwiY29uZmlnIiwic3RlcHMiLCJtYXAiLCJzdGVwIiwiaW5kZXgiLCJpc0FjdGl2ZSIsImN1cnJlbnRTdGVwIiwiaXNTZXQiLCJpc1NlY3Rpb25TZXQiLCJPYmplY3QiLCJ2YWx1ZXMiLCJldmVyeSIsInZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIk1lbnUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBCb3gsIFRleHQgfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCB7IHVzZUNvbnRleHQgfSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgV2l6YXJkQ29udGV4dCA9IHJlcXVpcmUoXCIuLi9XaXphcmRDb250ZXh0XCIpO1xuY29uc3QgTWVudSA9ICgpID0+IHtcblx0Y29uc3QgeyBuYXYsIGNvbmZpZyB9ID0gdXNlQ29udGV4dChXaXphcmRDb250ZXh0KTtcblx0cmV0dXJuIChcblx0XHQ8Qm94XG5cdFx0XHR3aWR0aD1cIjEwJVwiXG5cdFx0XHRtaW5XaWR0aD17MTJ9XG5cdFx0XHRmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCJcblx0XHRcdGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCJcblx0XHRcdGFsaWduSXRlbXM9XCJmbGV4LWVuZFwiXG5cdFx0PlxuXHRcdFx0e25hdi5zdGVwcy5tYXAoKHN0ZXAsIGluZGV4KSA9PiB7XG5cdFx0XHRcdGNvbnN0IGlzQWN0aXZlID0gaW5kZXggPT09IG5hdi5jdXJyZW50U3RlcDtcblx0XHRcdFx0Y29uc3QgaXNTZXQgPSBjb25maWdbbmF2LnN0ZXBzW2luZGV4XV0/LmlzU2V0O1xuXHRcdFx0XHRjb25zdCBpc1NlY3Rpb25TZXQgPVxuXHRcdFx0XHRcdGlzU2V0IGluc3RhbmNlb2YgT2JqZWN0XG5cdFx0XHRcdFx0XHQ/IE9iamVjdC52YWx1ZXMoaXNTZXQpLmV2ZXJ5KCh2YWx1ZSkgPT4gdmFsdWUgPT09IHRydWUpXG5cdFx0XHRcdFx0XHQ6IGlzU2V0O1xuXG5cdFx0XHRcdHJldHVybiAoXG5cdFx0XHRcdFx0PFRleHRcblx0XHRcdFx0XHRcdGNvbG9yPXtpc1NlY3Rpb25TZXQgPyBcImdyZWVuXCIgOiBcIlwifVxuXHRcdFx0XHRcdFx0ZGltQ29sb3I9eyFpc0FjdGl2ZX1cblx0XHRcdFx0XHRcdGJvbGQ9e2lzQWN0aXZlfVxuXHRcdFx0XHRcdFx0dW5kZXJsaW5lPXtpc0FjdGl2ZX1cblx0XHRcdFx0XHRcdGJhY2tncm91bmRDb2xvcj17aXNBY3RpdmUgJiYgXCIjNDgxZmRlXCJ9XG5cdFx0XHRcdFx0XHRrZXk9e2luZGV4fVxuXHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdHtzdGVwfVxuXHRcdFx0XHRcdDwvVGV4dD5cblx0XHRcdFx0KTtcblx0XHRcdH0pfVxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBNZW51O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBLEdBQUc7RUFBRUM7QUFBSyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDcEMsTUFBTTtFQUFFQztBQUFXLENBQUMsR0FBR0QsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUN2QyxNQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDOUIsTUFBTUcsYUFBYSxHQUFHSCxPQUFPLENBQUMsa0JBQWtCLENBQUM7QUFDakQsTUFBTUksSUFBSSxHQUFHLE1BQU07RUFDbEIsTUFBTTtJQUFFQyxHQUFHO0lBQUVDO0VBQU8sQ0FBQyxHQUFHTCxVQUFVLENBQUNFLGFBQWEsQ0FBQztFQUNqRCxvQkFDQyxvQkFBQyxHQUFHO0lBQ0gsS0FBSyxFQUFDLEtBQUs7SUFDWCxRQUFRLEVBQUUsRUFBRztJQUNiLGFBQWEsRUFBQyxRQUFRO0lBQ3RCLGNBQWMsRUFBQyxRQUFRO0lBQ3ZCLFVBQVUsRUFBQztFQUFVLEdBRXBCRSxHQUFHLENBQUNFLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLElBQUksRUFBRUMsS0FBSyxLQUFLO0lBQy9CLE1BQU1DLFFBQVEsR0FBR0QsS0FBSyxLQUFLTCxHQUFHLENBQUNPLFdBQVc7SUFDMUMsTUFBTUMsS0FBSyxHQUFHUCxNQUFNLENBQUNELEdBQUcsQ0FBQ0UsS0FBSyxDQUFDRyxLQUFLLENBQUMsQ0FBQyxFQUFFRyxLQUFLO0lBQzdDLE1BQU1DLFlBQVksR0FDakJELEtBQUssWUFBWUUsTUFBTSxHQUNwQkEsTUFBTSxDQUFDQyxNQUFNLENBQUNILEtBQUssQ0FBQyxDQUFDSSxLQUFLLENBQUVDLEtBQUssSUFBS0EsS0FBSyxLQUFLLElBQUksQ0FBQyxHQUNyREwsS0FBSztJQUVULG9CQUNDLG9CQUFDLElBQUk7TUFDSixLQUFLLEVBQUVDLFlBQVksR0FBRyxPQUFPLEdBQUcsRUFBRztNQUNuQyxRQUFRLEVBQUUsQ0FBQ0gsUUFBUztNQUNwQixJQUFJLEVBQUVBLFFBQVM7TUFDZixTQUFTLEVBQUVBLFFBQVM7TUFDcEIsZUFBZSxFQUFFQSxRQUFRLElBQUksU0FBVTtNQUN2QyxHQUFHLEVBQUVEO0lBQU0sR0FFVkQsSUFBSSxDQUNDO0VBRVQsQ0FBQyxDQUFDLENBQ0c7QUFFUixDQUFDO0FBRURVLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHaEIsSUFBSSJ9