const React = require("react");
const BigText = require("ink-big-text");
const Gradient = require("ink-gradient");
const {
  Box
} = require("ink");
const {
  useState,
  useEffect
} = require("react");
let colorsSetInitialState = ["#cf4884", "#8832b3", "#b5b4fa", "#cdadff", "#6d29c5", "#4e21d9", "#481ede", "#4b9db0", "#8deef5", "#cdd4a2", "#e2a659"];
const IntroTitle = () => {
  const [colorsSet, setColorSet] = useState(colorsSetInitialState);
  useEffect(() => {
    const changeColorInterval = setInterval(() => {
      const temp = [...colorsSet];
      const a = temp.shift();
      temp.push(a);
      setColorSet(temp);
    }, 200);
    return () => {
      try {
        clearInterval(changeColorInterval);
      } catch (error) {
        console.log("changeColorInterval error: ", error);
      }
    };
  }, [colorsSet]);
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "row"
  }, /*#__PURE__*/React.createElement(Gradient, {
    colors: colorsSet.slice(0, 4)
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "ARB",
    font: "tiny"
  })), /*#__PURE__*/React.createElement(Gradient, {
    colors: colorsSet.slice(4, 8)
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "Jupiter",
    font: "tiny",
    lineHeight: 1
  })), /*#__PURE__*/React.createElement(Gradient, {
    colors: colorsSet.slice(8)
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "Bot",
    font: "tiny"
  })));
};
module.exports = IntroTitle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCaWdUZXh0IiwiR3JhZGllbnQiLCJCb3giLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsImNvbG9yc1NldEluaXRpYWxTdGF0ZSIsIkludHJvVGl0bGUiLCJjb2xvcnNTZXQiLCJzZXRDb2xvclNldCIsImNoYW5nZUNvbG9ySW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsInRlbXAiLCJhIiwic2hpZnQiLCJwdXNoIiwiY2xlYXJJbnRlcnZhbCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsInNsaWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIldpemFyZEhlYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IEJpZ1RleHQgPSByZXF1aXJlKFwiaW5rLWJpZy10ZXh0XCIpO1xuY29uc3QgR3JhZGllbnQgPSByZXF1aXJlKFwiaW5rLWdyYWRpZW50XCIpO1xuY29uc3QgeyBCb3ggfSA9IHJlcXVpcmUoXCJpbmtcIik7XG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcblxubGV0IGNvbG9yc1NldEluaXRpYWxTdGF0ZSA9IFtcblx0XCIjY2Y0ODg0XCIsXG5cdFwiIzg4MzJiM1wiLFxuXHRcIiNiNWI0ZmFcIixcblx0XCIjY2RhZGZmXCIsXG5cdFwiIzZkMjljNVwiLFxuXHRcIiM0ZTIxZDlcIixcblx0XCIjNDgxZWRlXCIsXG5cdFwiIzRiOWRiMFwiLFxuXHRcIiM4ZGVlZjVcIixcblx0XCIjY2RkNGEyXCIsXG5cdFwiI2UyYTY1OVwiLFxuXTtcblxuY29uc3QgSW50cm9UaXRsZSA9ICgpID0+IHtcblx0Y29uc3QgW2NvbG9yc1NldCwgc2V0Q29sb3JTZXRdID0gdXNlU3RhdGUoY29sb3JzU2V0SW5pdGlhbFN0YXRlKTtcblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRjb25zdCBjaGFuZ2VDb2xvckludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuXHRcdFx0Y29uc3QgdGVtcCA9IFsuLi5jb2xvcnNTZXRdO1xuXHRcdFx0Y29uc3QgYSA9IHRlbXAuc2hpZnQoKTtcblx0XHRcdHRlbXAucHVzaChhKTtcblx0XHRcdHNldENvbG9yU2V0KHRlbXApO1xuXHRcdH0sIDIwMCk7XG5cblx0XHRyZXR1cm4gKCkgPT4ge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Y2xlYXJJbnRlcnZhbChjaGFuZ2VDb2xvckludGVydmFsKTtcblx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiY2hhbmdlQ29sb3JJbnRlcnZhbCBlcnJvcjogXCIsIGVycm9yKTtcblx0XHRcdH1cblx0XHR9O1xuXHR9LCBbY29sb3JzU2V0XSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94IGZsZXhEaXJlY3Rpb249XCJyb3dcIj5cblx0XHRcdDxHcmFkaWVudCBjb2xvcnM9e2NvbG9yc1NldC5zbGljZSgwLCA0KX0+XG5cdFx0XHRcdDxCaWdUZXh0IHRleHQ9e1wiQVJCXCJ9IGZvbnQ9XCJ0aW55XCI+PC9CaWdUZXh0PlxuXHRcdFx0PC9HcmFkaWVudD5cblx0XHRcdDxHcmFkaWVudCBjb2xvcnM9e2NvbG9yc1NldC5zbGljZSg0LCA4KX0+XG5cdFx0XHRcdDxCaWdUZXh0IHRleHQ9XCJKdXBpdGVyXCIgZm9udD1cInRpbnlcIiBsaW5lSGVpZ2h0PXsxfT48L0JpZ1RleHQ+XG5cdFx0XHQ8L0dyYWRpZW50PlxuXHRcdFx0PEdyYWRpZW50IGNvbG9ycz17Y29sb3JzU2V0LnNsaWNlKDgpfT5cblx0XHRcdFx0PEJpZ1RleHQgdGV4dD1cIkJvdFwiIGZvbnQ9XCJ0aW55XCI+PC9CaWdUZXh0PlxuXHRcdFx0PC9HcmFkaWVudD5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW50cm9UaXRsZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUN2QyxNQUFNRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDeEMsTUFBTTtFQUFFRztBQUFJLENBQUMsR0FBR0gsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUM5QixNQUFNO0VBQUVJLFFBQVE7RUFBRUM7QUFBVSxDQUFDLEdBQUdMLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFFaEQsSUFBSU0scUJBQXFCLEdBQUcsQ0FDM0IsU0FBUyxFQUNULFNBQVMsRUFDVCxTQUFTLEVBQ1QsU0FBUyxFQUNULFNBQVMsRUFDVCxTQUFTLEVBQ1QsU0FBUyxFQUNULFNBQVMsRUFDVCxTQUFTLEVBQ1QsU0FBUyxFQUNULFNBQVMsQ0FDVDtBQUVELE1BQU1DLFVBQVUsR0FBRyxNQUFNO0VBQ3hCLE1BQU0sQ0FBQ0MsU0FBUyxFQUFFQyxXQUFXLENBQUMsR0FBR0wsUUFBUSxDQUFDRSxxQkFBcUIsQ0FBQztFQUNoRUQsU0FBUyxDQUFDLE1BQU07SUFDZixNQUFNSyxtQkFBbUIsR0FBR0MsV0FBVyxDQUFDLE1BQU07TUFDN0MsTUFBTUMsSUFBSSxHQUFHLENBQUMsR0FBR0osU0FBUyxDQUFDO01BQzNCLE1BQU1LLENBQUMsR0FBR0QsSUFBSSxDQUFDRSxLQUFLLEVBQUU7TUFDdEJGLElBQUksQ0FBQ0csSUFBSSxDQUFDRixDQUFDLENBQUM7TUFDWkosV0FBVyxDQUFDRyxJQUFJLENBQUM7SUFDbEIsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUVQLE9BQU8sTUFBTTtNQUNaLElBQUk7UUFDSEksYUFBYSxDQUFDTixtQkFBbUIsQ0FBQztNQUNuQyxDQUFDLENBQUMsT0FBT08sS0FBSyxFQUFFO1FBQ2ZDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDZCQUE2QixFQUFFRixLQUFLLENBQUM7TUFDbEQ7SUFDRCxDQUFDO0VBQ0YsQ0FBQyxFQUFFLENBQUNULFNBQVMsQ0FBQyxDQUFDO0VBRWYsb0JBQ0Msb0JBQUMsR0FBRztJQUFDLGFBQWEsRUFBQztFQUFLLGdCQUN2QixvQkFBQyxRQUFRO0lBQUMsTUFBTSxFQUFFQSxTQUFTLENBQUNZLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQztFQUFFLGdCQUN2QyxvQkFBQyxPQUFPO0lBQUMsSUFBSSxFQUFFLEtBQU07SUFBQyxJQUFJLEVBQUM7RUFBTSxFQUFXLENBQ2xDLGVBQ1gsb0JBQUMsUUFBUTtJQUFDLE1BQU0sRUFBRVosU0FBUyxDQUFDWSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUM7RUFBRSxnQkFDdkMsb0JBQUMsT0FBTztJQUFDLElBQUksRUFBQyxTQUFTO0lBQUMsSUFBSSxFQUFDLE1BQU07SUFBQyxVQUFVLEVBQUU7RUFBRSxFQUFXLENBQ25ELGVBQ1gsb0JBQUMsUUFBUTtJQUFDLE1BQU0sRUFBRVosU0FBUyxDQUFDWSxLQUFLLENBQUMsQ0FBQztFQUFFLGdCQUNwQyxvQkFBQyxPQUFPO0lBQUMsSUFBSSxFQUFDLEtBQUs7SUFBQyxJQUFJLEVBQUM7RUFBTSxFQUFXLENBQ2hDLENBQ047QUFFUixDQUFDO0FBRURDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHZixVQUFVIn0=